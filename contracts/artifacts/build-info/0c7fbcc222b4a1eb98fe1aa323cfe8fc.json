{
	"id": "0c7fbcc222b4a1eb98fe1aa323cfe8fc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/auction.sol": {
				"content": "//SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.6.0 <0.9.0;\r\n\r\ncontract Auction{\r\n\r\n    address payable public owner;\r\n    mapping(address => uint) public bids;\r\n    bool private open;\r\n\r\n    \r\n\r\n    constructor(){\r\n        owner = payable(msg.sender);\r\n        open = false;\r\n    }\r\n\r\n    receive() external payable{\r\n        require(auctionIsOpen());\r\n        require(msg.sender != owner);\r\n        addBid(msg.sender, msg.value);\r\n    }\r\n\r\n    fallback() external payable{\r\n        revert();\r\n    }\r\n\r\n    function addBid(address addr, uint bid) internal{\r\n        //add new address or add increment bid to mapping\r\n    }\r\n\r\n    //auction is open and bidders can add bids\r\n    function auctionIsOpen() public view returns(bool){\r\n        return open;\r\n    }\r\n\r\n\r\n    function getHighestBidder() public view returns(address){\r\n\r\n    }\r\n\r\n    function getHighestBindingBid() public view returns(uint){\r\n\r\n    }\r\n\r\n    function start() public {\r\n        require(msg.sender == owner);\r\n        require(!auctionIsOpen());\r\n\r\n        open = true;\r\n\r\n        //clear bids\r\n    }\r\n\r\n    function endAuction() public{\r\n        require(msg.sender == owner);\r\n        require(auctionIsOpen());\r\n        \r\n        open = false;\r\n\r\n        //get Highest Bidder\r\n        //withdraw highest bid to owner\r\n        //withdraw open funds to bidders\r\n        //clear bids\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/auction.sol": {
				"Auction": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "auctionIsOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "bids",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endAuction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHighestBidder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHighestBindingBid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/auction.sol\":73:1374  contract Auction{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/auction.sol\":210:292  constructor(){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/auction.sol\":250:260  msg.sender */\n  caller\n    /* \"contracts/auction.sol\":234:239  owner */\n  0x00\n  dup1\n    /* \"contracts/auction.sol\":234:261  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/auction.sol\":279:284  false */\n  0x00\n    /* \"contracts/auction.sol\":272:276  open */\n  0x02\n  0x00\n    /* \"contracts/auction.sol\":272:284  open = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/auction.sol\":73:1374  contract Auction{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/auction.sol\":73:1374  contract Auction{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x62ea82db\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x62ea82db\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfe67a54b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x3495a4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2b5095b6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3046309f\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/auction.sol\":345:360  auctionIsOpen() */\n      tag_13\n        /* \"contracts/auction.sol\":345:358  auctionIsOpen */\n      tag_14\n        /* \"contracts/auction.sol\":345:360  auctionIsOpen() */\n      jump\t// in\n    tag_13:\n        /* \"contracts/auction.sol\":337:361  require(auctionIsOpen()) */\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n        /* \"contracts/auction.sol\":394:399  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/auction.sol\":380:399  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/auction.sol\":380:390  msg.sender */\n      caller\n        /* \"contracts/auction.sol\":380:399  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/auction.sol\":372:400  require(msg.sender != owner) */\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n        /* \"contracts/auction.sol\":411:440  addBid(msg.sender, msg.value) */\n      tag_17\n        /* \"contracts/auction.sol\":418:428  msg.sender */\n      caller\n        /* \"contracts/auction.sol\":430:439  msg.value */\n      callvalue\n        /* \"contracts/auction.sol\":411:417  addBid */\n      tag_18\n        /* \"contracts/auction.sol\":411:440  addBid(msg.sender, msg.value) */\n      jump\t// in\n    tag_17:\n        /* \"contracts/auction.sol\":73:1374  contract Auction{\r... */\n      stop\n    tag_2:\n        /* \"contracts/auction.sol\":494:502  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/auction.sol\":779:845  function getHighestBidder() public view returns(address){\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/auction.sol\":689:769  function auctionIsOpen() public view returns(bool){\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_14\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/auction.sol\":853:920  function getHighestBindingBid() public view returns(uint){\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/auction.sol\":133:169  mapping(address => uint) public bids */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/auction.sol\":98:126  address payable public owner */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/auction.sol\":928:1083  function start() public {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/auction.sol\":1091:1371  function endAuction() public{\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/auction.sol\":689:769  function auctionIsOpen() public view returns(bool){\r... */\n    tag_14:\n        /* \"contracts/auction.sol\":734:738  bool */\n      0x00\n        /* \"contracts/auction.sol\":757:761  open */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/auction.sol\":750:761  return open */\n      swap1\n      pop\n        /* \"contracts/auction.sol\":689:769  function auctionIsOpen() public view returns(bool){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/auction.sol\":518:633  function addBid(address addr, uint bid) internal{\r... */\n    tag_18:\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/auction.sol\":779:845  function getHighestBidder() public view returns(address){\r... */\n    tag_23:\n        /* \"contracts/auction.sol\":827:834  address */\n      0x00\n        /* \"contracts/auction.sol\":779:845  function getHighestBidder() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/auction.sol\":853:920  function getHighestBindingBid() public view returns(uint){\r... */\n    tag_32:\n        /* \"contracts/auction.sol\":905:909  uint */\n      0x00\n        /* \"contracts/auction.sol\":853:920  function getHighestBindingBid() public view returns(uint){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/auction.sol\":133:169  mapping(address => uint) public bids */\n    tag_39:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/auction.sol\":98:126  address payable public owner */\n    tag_43:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/auction.sol\":928:1083  function start() public {\r... */\n    tag_48:\n        /* \"contracts/auction.sol\":985:990  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/auction.sol\":971:990  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/auction.sol\":971:981  msg.sender */\n      caller\n        /* \"contracts/auction.sol\":971:990  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/auction.sol\":963:991  require(msg.sender == owner) */\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n        /* \"contracts/auction.sol\":1011:1026  auctionIsOpen() */\n      tag_58\n        /* \"contracts/auction.sol\":1011:1024  auctionIsOpen */\n      tag_14\n        /* \"contracts/auction.sol\":1011:1026  auctionIsOpen() */\n      jump\t// in\n    tag_58:\n        /* \"contracts/auction.sol\":1010:1026  !auctionIsOpen() */\n      iszero\n        /* \"contracts/auction.sol\":1002:1027  require(!auctionIsOpen()) */\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n        /* \"contracts/auction.sol\":1047:1051  true */\n      0x01\n        /* \"contracts/auction.sol\":1040:1044  open */\n      0x02\n      0x00\n        /* \"contracts/auction.sol\":1040:1051  open = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/auction.sol\":928:1083  function start() public {\r... */\n      jump\t// out\n        /* \"contracts/auction.sol\":1091:1371  function endAuction() public{\r... */\n    tag_51:\n        /* \"contracts/auction.sol\":1152:1157  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/auction.sol\":1138:1157  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/auction.sol\":1138:1148  msg.sender */\n      caller\n        /* \"contracts/auction.sol\":1138:1157  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/auction.sol\":1130:1158  require(msg.sender == owner) */\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n        /* \"contracts/auction.sol\":1177:1192  auctionIsOpen() */\n      tag_62\n        /* \"contracts/auction.sol\":1177:1190  auctionIsOpen */\n      tag_14\n        /* \"contracts/auction.sol\":1177:1192  auctionIsOpen() */\n      jump\t// in\n    tag_62:\n        /* \"contracts/auction.sol\":1169:1193  require(auctionIsOpen()) */\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n        /* \"contracts/auction.sol\":1221:1226  false */\n      0x00\n        /* \"contracts/auction.sol\":1214:1218  open */\n      0x02\n      0x00\n        /* \"contracts/auction.sol\":1214:1226  open = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/auction.sol\":1091:1371  function endAuction() public{\r... */\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_65:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_67\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_38:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":228:347   */\n    tag_70:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_73\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_65\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:629   */\n    tag_74:\n        /* \"#utility.yul\":590:622   */\n      tag_76\n        /* \"#utility.yul\":616:621   */\n      dup2\n        /* \"#utility.yul\":590:622   */\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":585:588   */\n      dup3\n        /* \"#utility.yul\":578:623   */\n      mstore\n        /* \"#utility.yul\":487:629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":635:753   */\n    tag_78:\n        /* \"#utility.yul\":722:746   */\n      tag_80\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":722:746   */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":717:720   */\n      dup3\n        /* \"#utility.yul\":710:747   */\n      mstore\n        /* \"#utility.yul\":635:753   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":759:868   */\n    tag_82:\n        /* \"#utility.yul\":840:861   */\n      tag_84\n        /* \"#utility.yul\":855:860   */\n      dup2\n        /* \"#utility.yul\":840:861   */\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":835:838   */\n      dup3\n        /* \"#utility.yul\":828:862   */\n      mstore\n        /* \"#utility.yul\":759:868   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":874:992   */\n    tag_86:\n        /* \"#utility.yul\":961:985   */\n      tag_88\n        /* \"#utility.yul\":979:984   */\n      dup2\n        /* \"#utility.yul\":961:985   */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":956:959   */\n      dup3\n        /* \"#utility.yul\":949:986   */\n      mstore\n        /* \"#utility.yul\":874:992   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":998:1220   */\n    tag_25:\n        /* \"#utility.yul\":1091:1095   */\n      0x00\n        /* \"#utility.yul\":1129:1131   */\n      0x20\n        /* \"#utility.yul\":1118:1127   */\n      dup3\n        /* \"#utility.yul\":1114:1132   */\n      add\n        /* \"#utility.yul\":1106:1132   */\n      swap1\n      pop\n        /* \"#utility.yul\":1142:1213   */\n      tag_91\n        /* \"#utility.yul\":1210:1211   */\n      0x00\n        /* \"#utility.yul\":1199:1208   */\n      dup4\n        /* \"#utility.yul\":1195:1212   */\n      add\n        /* \"#utility.yul\":1186:1192   */\n      dup5\n        /* \"#utility.yul\":1142:1213   */\n      tag_78\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":998:1220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1226:1480   */\n    tag_45:\n        /* \"#utility.yul\":1335:1339   */\n      0x00\n        /* \"#utility.yul\":1373:1375   */\n      0x20\n        /* \"#utility.yul\":1362:1371   */\n      dup3\n        /* \"#utility.yul\":1358:1376   */\n      add\n        /* \"#utility.yul\":1350:1376   */\n      swap1\n      pop\n        /* \"#utility.yul\":1386:1473   */\n      tag_93\n        /* \"#utility.yul\":1470:1471   */\n      0x00\n        /* \"#utility.yul\":1459:1468   */\n      dup4\n        /* \"#utility.yul\":1455:1472   */\n      add\n        /* \"#utility.yul\":1446:1452   */\n      dup5\n        /* \"#utility.yul\":1386:1473   */\n      tag_74\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1226:1480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1486:1696   */\n    tag_29:\n        /* \"#utility.yul\":1573:1577   */\n      0x00\n        /* \"#utility.yul\":1611:1613   */\n      0x20\n        /* \"#utility.yul\":1600:1609   */\n      dup3\n        /* \"#utility.yul\":1596:1614   */\n      add\n        /* \"#utility.yul\":1588:1614   */\n      swap1\n      pop\n        /* \"#utility.yul\":1624:1689   */\n      tag_95\n        /* \"#utility.yul\":1686:1687   */\n      0x00\n        /* \"#utility.yul\":1675:1684   */\n      dup4\n        /* \"#utility.yul\":1671:1688   */\n      add\n        /* \"#utility.yul\":1662:1668   */\n      dup5\n        /* \"#utility.yul\":1624:1689   */\n      tag_82\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1486:1696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1702:1924   */\n    tag_34:\n        /* \"#utility.yul\":1795:1799   */\n      0x00\n        /* \"#utility.yul\":1833:1835   */\n      0x20\n        /* \"#utility.yul\":1822:1831   */\n      dup3\n        /* \"#utility.yul\":1818:1836   */\n      add\n        /* \"#utility.yul\":1810:1836   */\n      swap1\n      pop\n        /* \"#utility.yul\":1846:1917   */\n      tag_97\n        /* \"#utility.yul\":1914:1915   */\n      0x00\n        /* \"#utility.yul\":1903:1912   */\n      dup4\n        /* \"#utility.yul\":1899:1916   */\n      add\n        /* \"#utility.yul\":1890:1896   */\n      dup5\n        /* \"#utility.yul\":1846:1917   */\n      tag_86\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1702:1924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2011:2107   */\n    tag_81:\n        /* \"#utility.yul\":2048:2055   */\n      0x00\n        /* \"#utility.yul\":2077:2101   */\n      tag_101\n        /* \"#utility.yul\":2095:2100   */\n      dup3\n        /* \"#utility.yul\":2077:2101   */\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2066:2101   */\n      swap1\n      pop\n        /* \"#utility.yul\":2011:2107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2113:2217   */\n    tag_77:\n        /* \"#utility.yul\":2158:2165   */\n      0x00\n        /* \"#utility.yul\":2187:2211   */\n      tag_104\n        /* \"#utility.yul\":2205:2210   */\n      dup3\n        /* \"#utility.yul\":2187:2211   */\n      tag_102\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2176:2211   */\n      swap1\n      pop\n        /* \"#utility.yul\":2113:2217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2223:2313   */\n    tag_85:\n        /* \"#utility.yul\":2257:2264   */\n      0x00\n        /* \"#utility.yul\":2300:2305   */\n      dup2\n        /* \"#utility.yul\":2293:2306   */\n      iszero\n        /* \"#utility.yul\":2286:2307   */\n      iszero\n        /* \"#utility.yul\":2275:2307   */\n      swap1\n      pop\n        /* \"#utility.yul\":2223:2313   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2319:2445   */\n    tag_102:\n        /* \"#utility.yul\":2356:2363   */\n      0x00\n        /* \"#utility.yul\":2396:2438   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2389:2394   */\n      dup3\n        /* \"#utility.yul\":2385:2439   */\n      and\n        /* \"#utility.yul\":2374:2439   */\n      swap1\n      pop\n        /* \"#utility.yul\":2319:2445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2451:2528   */\n    tag_89:\n        /* \"#utility.yul\":2488:2495   */\n      0x00\n        /* \"#utility.yul\":2517:2522   */\n      dup2\n        /* \"#utility.yul\":2506:2522   */\n      swap1\n      pop\n        /* \"#utility.yul\":2451:2528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2657:2774   */\n    tag_72:\n        /* \"#utility.yul\":2766:2767   */\n      0x00\n        /* \"#utility.yul\":2763:2764   */\n      dup1\n        /* \"#utility.yul\":2756:2768   */\n      revert\n        /* \"#utility.yul\":2780:2902   */\n    tag_68:\n        /* \"#utility.yul\":2853:2877   */\n      tag_112\n        /* \"#utility.yul\":2871:2876   */\n      dup2\n        /* \"#utility.yul\":2853:2877   */\n      tag_81\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2846:2851   */\n      dup2\n        /* \"#utility.yul\":2843:2878   */\n      eq\n        /* \"#utility.yul\":2833:2896   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":2892:2893   */\n      0x00\n        /* \"#utility.yul\":2889:2890   */\n      dup1\n        /* \"#utility.yul\":2882:2894   */\n      revert\n        /* \"#utility.yul\":2833:2896   */\n    tag_113:\n        /* \"#utility.yul\":2780:2902   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122089b509cecdf3f1ec125b680c0ef648291a424356e038b8a44e188f26f0db888e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260006101000a81548160ff02191690831515021790555061050e8061007b6000396000f3fe6080604052600436106100735760003560e01c806362ea82db1161004e57806362ea82db146101745780638da5cb5b146101b1578063be9a6555146101dc578063fe67a54b146101f3576100ee565b80623495a4146100f35780632b5095b61461011e5780633046309f14610149576100ee565b366100ee5761008061020a565b61008957600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156100e257600080fd5b6100ec3334610221565b005b600080fd5b3480156100ff57600080fd5b50610108610225565b60405161011591906103f6565b60405180910390f35b34801561012a57600080fd5b5061013361020a565b604051610140919061042c565b60405180910390f35b34801561015557600080fd5b5061015e61022a565b60405161016b9190610447565b60405180910390f35b34801561018057600080fd5b5061019b6004803603810190610196919061038d565b61022f565b6040516101a89190610447565b60405180910390f35b3480156101bd57600080fd5b506101c6610247565b6040516101d39190610411565b60405180910390f35b3480156101e857600080fd5b506101f161026b565b005b3480156101ff57600080fd5b506102086102f2565b005b6000600260009054906101000a900460ff16905090565b5050565b600090565b600090565b60016020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c357600080fd5b6102cb61020a565b156102d557600080fd5b6001600260006101000a81548160ff021916908315150217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034a57600080fd5b61035261020a565b61035b57600080fd5b6000600260006101000a81548160ff021916908315150217905550565b600081359050610387816104c1565b92915050565b6000602082840312156103a3576103a26104bc565b5b60006103b184828501610378565b91505092915050565b6103c381610474565b82525050565b6103d281610462565b82525050565b6103e181610486565b82525050565b6103f0816104b2565b82525050565b600060208201905061040b60008301846103c9565b92915050565b600060208201905061042660008301846103ba565b92915050565b600060208201905061044160008301846103d8565b92915050565b600060208201905061045c60008301846103e7565b92915050565b600061046d82610492565b9050919050565b600061047f82610492565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6104ca81610462565b81146104d557600080fd5b5056fea264697066735822122089b509cecdf3f1ec125b680c0ef648291a424356e038b8a44e188f26f0db888e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x50E DUP1 PUSH2 0x7B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x73 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62EA82DB GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x62EA82DB EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xFE67A54B EQ PUSH2 0x1F3 JUMPI PUSH2 0xEE JUMP JUMPDEST DUP1 PUSH3 0x3495A4 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x2B5095B6 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x3046309F EQ PUSH2 0x149 JUMPI PUSH2 0xEE JUMP JUMPDEST CALLDATASIZE PUSH2 0xEE JUMPI PUSH2 0x80 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC CALLER CALLVALUE PUSH2 0x221 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x22A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH2 0x26B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x2F2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CB PUSH2 0x20A JUMP JUMPDEST ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x387 DUP2 PUSH2 0x4C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A3 JUMPI PUSH2 0x3A2 PUSH2 0x4BC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP5 DUP3 DUP6 ADD PUSH2 0x378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C3 DUP2 PUSH2 0x474 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3D2 DUP2 PUSH2 0x462 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3E1 DUP2 PUSH2 0x486 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3F0 DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x426 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x441 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46D DUP3 PUSH2 0x492 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F DUP3 PUSH2 0x492 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4CA DUP2 PUSH2 0x462 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xB5 MULMOD 0xCE 0xCD RETURN CALL 0xEC SLT JUMPDEST PUSH9 0xC0EF648291A424356 0xE0 CODESIZE 0xB8 LOG4 0x4E XOR DUP16 0x26 CREATE 0xDB DUP9 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "73:1301:0:-:0;;;210:82;;;;;;;;;;250:10;234:5;;:27;;;;;;;;;;;;;;;;;;279:5;272:4;;:12;;;;;;;;;;;;;;;;;;73:1301;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_48": {
									"entryPoint": null,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_55": {
									"entryPoint": null,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addBid_63": {
									"entryPoint": 545,
									"id": 63,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@auctionIsOpen_71": {
									"entryPoint": 522,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@bids_7": {
									"entryPoint": 559,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endAuction_124": {
									"entryPoint": 754,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getHighestBidder_77": {
									"entryPoint": 549,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getHighestBindingBid_83": {
									"entryPoint": 554,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_3": {
									"entryPoint": 583,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@start_104": {
									"entryPoint": 619,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 1041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1212,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2905:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "568:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "585:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "616:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "590:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "590:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "578:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "578:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "578:45:1"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "556:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "563:3:1",
														"type": ""
													}
												],
												"src": "487:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "717:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "740:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "722:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "722:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "710:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "710:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "688:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "695:3:1",
														"type": ""
													}
												],
												"src": "635:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "818:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "835:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "855:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "840:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "828:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "828:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "828:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "806:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "813:3:1",
														"type": ""
													}
												],
												"src": "759:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "956:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "979:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "961:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "961:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "949:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "949:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "949:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "927:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "934:3:1",
														"type": ""
													}
												],
												"src": "874:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1096:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1106:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1118:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1129:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1114:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1114:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1106:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1186:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1199:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1210:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1195:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1195:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1142:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1142:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1080:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1091:4:1",
														"type": ""
													}
												],
												"src": "998:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1340:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1350:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1362:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1373:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1358:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1350:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1446:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1470:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1455:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1386:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1386:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1312:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1324:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1335:4:1",
														"type": ""
													}
												],
												"src": "1226:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1578:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1600:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1611:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1596:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1596:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1588:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1662:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1675:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1686:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1671:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1671:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1624:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1624:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1624:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1550:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1562:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1573:4:1",
														"type": ""
													}
												],
												"src": "1486:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1800:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1810:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1833:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1818:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1810:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1903:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1914:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1899:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1899:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1846:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1846:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1846:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1772:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1784:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1795:4:1",
														"type": ""
													}
												],
												"src": "1702:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1980:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1996:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1990:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1963:6:1",
														"type": ""
													}
												],
												"src": "1930:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2056:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2066:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2095:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2077:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2077:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2066:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2038:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2048:7:1",
														"type": ""
													}
												],
												"src": "2011:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2166:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2176:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2205:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2187:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2187:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2176:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2148:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2158:7:1",
														"type": ""
													}
												],
												"src": "2113:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2265:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2275:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2300:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2293:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2293:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2275:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2247:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2257:7:1",
														"type": ""
													}
												],
												"src": "2223:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2364:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2374:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2389:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2396:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2385:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2374:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2346:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2356:7:1",
														"type": ""
													}
												],
												"src": "2319:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2496:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2506:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2517:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2506:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2478:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2488:7:1",
														"type": ""
													}
												],
												"src": "2451:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2623:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2643:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2633:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2534:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2746:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2763:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2766:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2756:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2756:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2756:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2657:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2823:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2880:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2889:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2892:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2882:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2882:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2882:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2846:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2871:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2853:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2853:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2843:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2843:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2836:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2836:43:1"
															},
															"nodeType": "YulIf",
															"src": "2833:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2816:5:1",
														"type": ""
													}
												],
												"src": "2780:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100735760003560e01c806362ea82db1161004e57806362ea82db146101745780638da5cb5b146101b1578063be9a6555146101dc578063fe67a54b146101f3576100ee565b80623495a4146100f35780632b5095b61461011e5780633046309f14610149576100ee565b366100ee5761008061020a565b61008957600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156100e257600080fd5b6100ec3334610221565b005b600080fd5b3480156100ff57600080fd5b50610108610225565b60405161011591906103f6565b60405180910390f35b34801561012a57600080fd5b5061013361020a565b604051610140919061042c565b60405180910390f35b34801561015557600080fd5b5061015e61022a565b60405161016b9190610447565b60405180910390f35b34801561018057600080fd5b5061019b6004803603810190610196919061038d565b61022f565b6040516101a89190610447565b60405180910390f35b3480156101bd57600080fd5b506101c6610247565b6040516101d39190610411565b60405180910390f35b3480156101e857600080fd5b506101f161026b565b005b3480156101ff57600080fd5b506102086102f2565b005b6000600260009054906101000a900460ff16905090565b5050565b600090565b600090565b60016020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c357600080fd5b6102cb61020a565b156102d557600080fd5b6001600260006101000a81548160ff021916908315150217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034a57600080fd5b61035261020a565b61035b57600080fd5b6000600260006101000a81548160ff021916908315150217905550565b600081359050610387816104c1565b92915050565b6000602082840312156103a3576103a26104bc565b5b60006103b184828501610378565b91505092915050565b6103c381610474565b82525050565b6103d281610462565b82525050565b6103e181610486565b82525050565b6103f0816104b2565b82525050565b600060208201905061040b60008301846103c9565b92915050565b600060208201905061042660008301846103ba565b92915050565b600060208201905061044160008301846103d8565b92915050565b600060208201905061045c60008301846103e7565b92915050565b600061046d82610492565b9050919050565b600061047f82610492565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6104ca81610462565b81146104d557600080fd5b5056fea264697066735822122089b509cecdf3f1ec125b680c0ef648291a424356e038b8a44e188f26f0db888e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x73 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62EA82DB GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x62EA82DB EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xFE67A54B EQ PUSH2 0x1F3 JUMPI PUSH2 0xEE JUMP JUMPDEST DUP1 PUSH3 0x3495A4 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x2B5095B6 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x3046309F EQ PUSH2 0x149 JUMPI PUSH2 0xEE JUMP JUMPDEST CALLDATASIZE PUSH2 0xEE JUMPI PUSH2 0x80 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC CALLER CALLVALUE PUSH2 0x221 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x22A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH2 0x26B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x2F2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CB PUSH2 0x20A JUMP JUMPDEST ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x387 DUP2 PUSH2 0x4C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A3 JUMPI PUSH2 0x3A2 PUSH2 0x4BC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP5 DUP3 DUP6 ADD PUSH2 0x378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C3 DUP2 PUSH2 0x474 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3D2 DUP2 PUSH2 0x462 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3E1 DUP2 PUSH2 0x486 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3F0 DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x426 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x441 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46D DUP3 PUSH2 0x492 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F DUP3 PUSH2 0x492 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4CA DUP2 PUSH2 0x462 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xB5 MULMOD 0xCE 0xCD RETURN CALL 0xEC SLT JUMPDEST PUSH9 0xC0EF648291A424356 0xE0 CODESIZE 0xB8 LOG4 0x4E XOR DUP16 0x26 CREATE 0xDB DUP9 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "73:1301:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;345:15;:13;:15::i;:::-;337:24;;;;;;394:5;;;;;;;;;;380:19;;:10;:19;;;;372:28;;;;;;411:29;418:10;430:9;411:6;:29::i;:::-;73:1301;;494:8;;;779:66;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;689:80;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;853:67;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;133:36;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;98:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;928:155;;;;;;;;;;;;;:::i;:::-;;1091:280;;;;;;;;;;;;;:::i;:::-;;689:80;734:4;757;;;;;;;;;;;750:11;;689:80;:::o;518:115::-;;;:::o;779:66::-;827:7;779:66;:::o;853:67::-;905:4;853:67;:::o;133:36::-;;;;;;;;;;;;;;;;;:::o;98:28::-;;;;;;;;;;;;:::o;928:155::-;985:5;;;;;;;;;;971:19;;:10;:19;;;963:28;;;;;;1011:15;:13;:15::i;:::-;1010:16;1002:25;;;;;;1047:4;1040;;:11;;;;;;;;;;;;;;;;;;928:155::o;1091:280::-;1152:5;;;;;;;;;;1138:19;;:10;:19;;;1130:28;;;;;;1177:15;:13;:15::i;:::-;1169:24;;;;;;1221:5;1214:4;;:12;;;;;;;;;;;;;;;;;;1091:280::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:142::-;590:32;616:5;590:32;:::i;:::-;585:3;578:45;487:142;;:::o;635:118::-;722:24;740:5;722:24;:::i;:::-;717:3;710:37;635:118;;:::o;759:109::-;840:21;855:5;840:21;:::i;:::-;835:3;828:34;759:109;;:::o;874:118::-;961:24;979:5;961:24;:::i;:::-;956:3;949:37;874:118;;:::o;998:222::-;1091:4;1129:2;1118:9;1114:18;1106:26;;1142:71;1210:1;1199:9;1195:17;1186:6;1142:71;:::i;:::-;998:222;;;;:::o;1226:254::-;1335:4;1373:2;1362:9;1358:18;1350:26;;1386:87;1470:1;1459:9;1455:17;1446:6;1386:87;:::i;:::-;1226:254;;;;:::o;1486:210::-;1573:4;1611:2;1600:9;1596:18;1588:26;;1624:65;1686:1;1675:9;1671:17;1662:6;1624:65;:::i;:::-;1486:210;;;;:::o;1702:222::-;1795:4;1833:2;1822:9;1818:18;1810:26;;1846:71;1914:1;1903:9;1899:17;1890:6;1846:71;:::i;:::-;1702:222;;;;:::o;2011:96::-;2048:7;2077:24;2095:5;2077:24;:::i;:::-;2066:35;;2011:96;;;:::o;2113:104::-;2158:7;2187:24;2205:5;2187:24;:::i;:::-;2176:35;;2113:104;;;:::o;2223:90::-;2257:7;2300:5;2293:13;2286:21;2275:32;;2223:90;;;:::o;2319:126::-;2356:7;2396:42;2389:5;2385:54;2374:65;;2319:126;;;:::o;2451:77::-;2488:7;2517:5;2506:16;;2451:77;;;:::o;2657:117::-;2766:1;2763;2756:12;2780:122;2853:24;2871:5;2853:24;:::i;:::-;2846:5;2843:35;2833:63;;2892:1;2889;2882:12;2833:63;2780:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "258800",
								"executionCost": "48833",
								"totalCost": "307633"
							},
							"external": {
								"": "158",
								"auctionIsOpen()": "2502",
								"bids(address)": "2814",
								"endAuction()": "28832",
								"getHighestBidder()": "379",
								"getHighestBindingBid()": "374",
								"owner()": "2533",
								"start()": "28813"
							},
							"internal": {
								"addBid(address,uint256)": "13"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 73,
									"end": 1374,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 73,
									"end": 1374,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73,
									"end": 1374,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 210,
									"end": 292,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 210,
									"end": 292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 210,
									"end": 292,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 210,
									"end": 292,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 292,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 210,
									"end": 292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 210,
									"end": 292,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 210,
									"end": 292,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 292,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 210,
									"end": 292,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 250,
									"end": 260,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 234,
									"end": 239,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 239,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 234,
									"end": 261,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 234,
									"end": 261,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 234,
									"end": 261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 234,
									"end": 261,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 234,
									"end": 261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 234,
									"end": 261,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 234,
									"end": 261,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 234,
									"end": 261,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 234,
									"end": 261,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 234,
									"end": 261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 234,
									"end": 261,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 234,
									"end": 261,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 234,
									"end": 261,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 234,
									"end": 261,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 234,
									"end": 261,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 234,
									"end": 261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 234,
									"end": 261,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 234,
									"end": 261,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 279,
									"end": 284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 276,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 272,
									"end": 276,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 284,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 272,
									"end": 284,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 272,
									"end": 284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 272,
									"end": 284,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 272,
									"end": 284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 272,
									"end": 284,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 272,
									"end": 284,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 272,
									"end": 284,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 272,
									"end": 284,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 272,
									"end": 284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 272,
									"end": 284,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 272,
									"end": 284,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 272,
									"end": 284,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 272,
									"end": 284,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 272,
									"end": 284,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 272,
									"end": 284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 272,
									"end": 284,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 272,
									"end": 284,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 73,
									"end": 1374,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 73,
									"end": 1374,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 73,
									"end": 1374,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 73,
									"end": 1374,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 1374,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 73,
									"end": 1374,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 1374,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122089b509cecdf3f1ec125b680c0ef648291a424356e038b8a44e188f26f0db888e64736f6c63430008070033",
									".code": [
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "62EA82DB"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "62EA82DB"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "BE9A6555"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FE67A54B"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "3495A4"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "2B5095B6"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "3046309F"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 345,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 345,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 345,
											"end": 360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 345,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 345,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 337,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 337,
											"end": 361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 337,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 361,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 337,
											"end": 361,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 337,
											"end": 361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 394,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 394,
											"end": 399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 399,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 394,
											"end": 399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 394,
											"end": 399,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 399,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 394,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 394,
											"end": 399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 380,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 380,
											"end": 399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 380,
											"end": 390,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 380,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 380,
											"end": 399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 380,
											"end": 399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 380,
											"end": 399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 372,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 372,
											"end": 400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 372,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 372,
											"end": 400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 372,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 372,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 411,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 418,
											"end": 428,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 430,
											"end": 439,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 411,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 411,
											"end": 440,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 440,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 411,
											"end": 440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 73,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 494,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 502,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 689,
											"end": 769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 689,
											"end": 769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 689,
											"end": 769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 689,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 689,
											"end": 769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 689,
											"end": 769,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 689,
											"end": 769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 689,
											"end": 769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 689,
											"end": 769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 689,
											"end": 769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 689,
											"end": 769,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 689,
											"end": 769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 689,
											"end": 769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 689,
											"end": 769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 734,
											"end": 738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 757,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 757,
											"end": 761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 757,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 757,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 757,
											"end": 761,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 757,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 757,
											"end": 761,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 757,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 757,
											"end": 761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 750,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 750,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 689,
											"end": 769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 518,
											"end": 633,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 518,
											"end": 633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 518,
											"end": 633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 518,
											"end": 633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 518,
											"end": 633,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 779,
											"end": 845,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 905,
											"end": 909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 920,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 169,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 98,
											"end": 126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 98,
											"end": 126,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 985,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 985,
											"end": 990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 985,
											"end": 990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 985,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 971,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 971,
											"end": 981,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 971,
											"end": 990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 971,
											"end": 990,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 963,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 963,
											"end": 991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 963,
											"end": 991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 963,
											"end": 991,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 963,
											"end": 991,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 963,
											"end": 991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1011,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1002,
											"end": 1027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1027,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1027,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1002,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1040,
											"end": 1044,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1040,
											"end": 1044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 928,
											"end": 1083,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1157,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1157,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1157,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1152,
											"end": 1157,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1138,
											"end": 1157,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1138,
											"end": 1157,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1157,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1130,
											"end": 1158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1158,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1158,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1130,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1177,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1177,
											"end": 1192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1177,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1169,
											"end": 1193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1193,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1193,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1169,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1214,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1371,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 487,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 590,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 616,
											"end": 621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 590,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 590,
											"end": 622,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 590,
											"end": 622,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 590,
											"end": 622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 585,
											"end": 588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 578,
											"end": 623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 629,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 635,
											"end": 753,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 635,
											"end": 753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 717,
											"end": 720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 710,
											"end": 747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 635,
											"end": 753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 753,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 759,
											"end": 868,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 759,
											"end": 868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 840,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 855,
											"end": 860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 840,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 840,
											"end": 861,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 840,
											"end": 861,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 840,
											"end": 861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 828,
											"end": 862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 759,
											"end": 868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 868,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 874,
											"end": 992,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 874,
											"end": 992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 979,
											"end": 984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 961,
											"end": 985,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 961,
											"end": 985,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 961,
											"end": 985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 949,
											"end": 986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 874,
											"end": 992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 992,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 998,
											"end": 1220,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 998,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1131,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1192,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1142,
											"end": 1213,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1142,
											"end": 1213,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1142,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1220,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1220,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1226,
											"end": 1480,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1226,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1375,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1362,
											"end": 1371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1470,
											"end": 1471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1452,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1386,
											"end": 1473,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1473,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1386,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1480,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1480,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1480,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1486,
											"end": 1696,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1486,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1684,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1668,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1696,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1696,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1702,
											"end": 1924,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1702,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 1799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1835,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1822,
											"end": 1831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1846,
											"end": 1917,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 1917,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1846,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1924,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1924,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2011,
											"end": 2107,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2011,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2095,
											"end": 2100,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2077,
											"end": 2101,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2101,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2077,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2107,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2113,
											"end": 2217,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2113,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2205,
											"end": 2210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2217,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2223,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2223,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2257,
											"end": 2264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2306,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2313,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2319,
											"end": 2445,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2319,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2389,
											"end": 2394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2439,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2374,
											"end": 2439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2374,
											"end": 2439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2445,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2451,
											"end": 2528,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2451,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2528,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2657,
											"end": 2774,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2657,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2768,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2902,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2780,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2871,
											"end": 2876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2853,
											"end": 2877,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2853,
											"end": 2877,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2853,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2833,
											"end": 2896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2894,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2896,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2833,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2902,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"auctionIsOpen()": "2b5095b6",
							"bids(address)": "62ea82db",
							"endAuction()": "fe67a54b",
							"getHighestBidder()": "003495a4",
							"getHighestBindingBid()": "3046309f",
							"owner()": "8da5cb5b",
							"start()": "be9a6555"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"auctionIsOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHighestBidder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHighestBindingBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/auction.sol\":\"Auction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/auction.sol\":{\"keccak256\":\"0xdecd4efe512e39a345ecd48b14297aab3e9ad7792403f2751698e35a9dbc9d2f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c72c18ec382be08b4a848babc0f9fc6511b1524e5642fcbcfc4fa8bcc405e71b\",\"dweb:/ipfs/QmWYN6wxAKnkwrBGPyaoPVGX4qqJmP14k5hpxNHKb3frhV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/auction.sol:Auction",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 7,
								"contract": "contracts/auction.sol:Auction",
								"label": "bids",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 9,
								"contract": "contracts/auction.sol:Auction",
								"label": "open",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/auction.sol": {
				"ast": {
					"absolutePath": "contracts/auction.sol",
					"exportedSymbols": {
						"Auction": [
							125
						]
					},
					"id": 126,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 125,
							"linearizedBaseContracts": [
								125
							],
							"name": "Auction",
							"nameLocation": "82:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "121:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "98:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "98:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "62ea82db",
									"id": 7,
									"mutability": "mutable",
									"name": "bids",
									"nameLocation": "165:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "133:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 6,
										"keyType": {
											"id": 4,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "141:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "133:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 5,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "152:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "open",
									"nameLocation": "189:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "176:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 8,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "176:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "223:69:0",
										"statements": [
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "234:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "250:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "250:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "242:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 13,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "242:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "242:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "234:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "234:27:0"
											},
											{
												"expression": {
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "open",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "272:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "279:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "272:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "272:12:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "221:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "223:0:0"
									},
									"scope": 125,
									"src": "210:82:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "326:122:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 29,
																"name": "auctionIsOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "345:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "345:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 28,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "337:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "337:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "337:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 34,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "380:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "380:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 36,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "394:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "380:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 33,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "372:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "372:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "372:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 41,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "418:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "418:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 43,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "430:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "430:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 40,
														"name": "addBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "411:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "411:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "411:29:0"
											}
										]
									},
									"id": 48,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "307:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "326:0:0"
									},
									"scope": 125,
									"src": "300:148:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "483:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 51,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "494:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "494:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "494:8:0"
											}
										]
									},
									"id": 55,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "464:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "483:0:0"
									},
									"scope": 125,
									"src": "456:54:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "566:67:0",
										"statements": []
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addBid",
									"nameLocation": "527:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "542:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "534:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "bid",
												"nameLocation": "553:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "548:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "548:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:24:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "566:0:0"
									},
									"scope": 125,
									"src": "518:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "739:30:0",
										"statements": [
											{
												"expression": {
													"id": 68,
													"name": "open",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "757:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 67,
												"id": 69,
												"nodeType": "Return",
												"src": "750:11:0"
											}
										]
									},
									"functionSelector": "2b5095b6",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "auctionIsOpen",
									"nameLocation": "698:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "711:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "734:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "734:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:6:0"
									},
									"scope": 125,
									"src": "689:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "835:10:0",
										"statements": []
									},
									"functionSelector": "003495a4",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHighestBidder",
									"nameLocation": "788:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "827:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:9:0"
									},
									"scope": 125,
									"src": "779:66:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "910:10:0",
										"statements": []
									},
									"functionSelector": "3046309f",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHighestBindingBid",
									"nameLocation": "862:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "882:2:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "905:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "904:6:0"
									},
									"scope": 125,
									"src": "853:67:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "952:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 87,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "971:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "971:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 89,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "985:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "971:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 86,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "963:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "963:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1010:16:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 94,
																	"name": "auctionIsOpen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "1011:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1011:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 93,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1002:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1002:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1002:25:0"
											},
											{
												"expression": {
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 99,
														"name": "open",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1040:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1047:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1040:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "1040:11:0"
											}
										]
									},
									"functionSelector": "be9a6555",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nameLocation": "937:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "942:2:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "952:0:0"
									},
									"scope": 125,
									"src": "928:155:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "1119:252:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 108,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1138:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1138:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 110,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "1152:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1138:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1130:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1130:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1130:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 115,
																"name": "auctionIsOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "1177:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1177:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1169:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1169:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "1169:24:0"
											},
											{
												"expression": {
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 119,
														"name": "open",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1214:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1221:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1214:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "1214:12:0"
											}
										]
									},
									"functionSelector": "fe67a54b",
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "endAuction",
									"nameLocation": "1100:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1110:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1119:0:0"
									},
									"scope": 125,
									"src": "1091:280:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 126,
							"src": "73:1301:0",
							"usedErrors": []
						}
					],
					"src": "38:1336:0"
				},
				"id": 0
			}
		}
	}
}